version: '3.8'

services:
  # PostgreSQL database for source Metabase
  source-postgres:
    image: postgres:15-alpine
    container_name: metabase-source-postgres
    environment:
      POSTGRES_DB: metabase_source
      POSTGRES_USER: metabase
      POSTGRES_PASSWORD: metabase_password
    ports:
      - "5432:5432"
    volumes:
      - source-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - metabase-test-network

  # PostgreSQL database for target Metabase
  target-postgres:
    image: postgres:15-alpine
    container_name: metabase-target-postgres
    environment:
      POSTGRES_DB: metabase_target
      POSTGRES_USER: metabase
      POSTGRES_PASSWORD: metabase_password
    ports:
      - "5433:5432"
    volumes:
      - target-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - metabase-test-network

  # Sample data database (shared between source and target)
  sample-data-postgres:
    image: postgres:15-alpine
    container_name: metabase-sample-data
    environment:
      POSTGRES_DB: sample_data
      POSTGRES_USER: sample_user
      POSTGRES_PASSWORD: sample_password
    ports:
      - "5434:5432"
    volumes:
      - sample-data:/var/lib/postgresql/data
      - ./tests/integration/fixtures/init-sample-data.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sample_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - metabase-test-network

  # Source Metabase instance
  source-metabase:
    image: metabase/metabase:v0.48.0
    container_name: metabase-source
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase_source
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: metabase_password
      MB_DB_HOST: source-postgres
      MB_JETTY_PORT: 3000
      JAVA_TIMEZONE: UTC
    ports:
      - "3000:3000"
    depends_on:
      source-postgres:
        condition: service_healthy
      sample-data-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s
    networks:
      - metabase-test-network
    volumes:
      - source-metabase-data:/metabase-data

  # Target Metabase instance
  target-metabase:
    image: metabase/metabase:v0.48.0
    container_name: metabase-target
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase_target
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: metabase_password
      MB_DB_HOST: target-postgres
      MB_JETTY_PORT: 3000
      JAVA_TIMEZONE: UTC
    ports:
      - "3001:3000"
    depends_on:
      target-postgres:
        condition: service_healthy
      sample-data-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s
    networks:
      - metabase-test-network
    volumes:
      - target-metabase-data:/metabase-data

networks:
  metabase-test-network:
    driver: bridge

volumes:
  source-postgres-data:
  target-postgres-data:
  sample-data:
  source-metabase-data:
  target-metabase-data:

